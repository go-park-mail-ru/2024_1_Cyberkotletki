// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/isAuth": {
            "get": {
                "description": "Проверяет, авторизован ли пользователь",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Удаляет сессию",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/logoutAll": {
            "post": {
                "description": "Удаляет все сессии пользователя",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections/compilation": {
            "get": {
                "description": "Возвращает список всех доступных жанров фильмов и сериалов",
                "tags": [
                    "Collections"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Жанр для составления подборки",
                        "name": "genre",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список с id фильмов указанного жанра",
                        "schema": {
                            "$ref": "#/definitions/dto.Compilation"
                        }
                    },
                    "404": {
                        "description": "Такого жанра не существует",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/collections/genres": {
            "get": {
                "description": "Возвращает список всех доступных жанров фильмов и сериалов",
                "tags": [
                    "Collections"
                ],
                "responses": {
                    "200": {
                        "description": "Список с id фильмов указанного жанра",
                        "schema": {
                            "$ref": "#/definitions/dto.Genres"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/content/contentPreview": {
            "get": {
                "description": "Возвращает краткую информацию о фильме или сериале",
                "tags": [
                    "Content"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID искомого контента. Контентом может быть как фильм, так и сериал",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список с id фильмов указанного жанра",
                        "schema": {
                            "$ref": "#/definitions/dto.PreviewContentCard"
                        }
                    },
                    "400": {
                        "description": "Требуется указать валидный id контента",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Контент с таким id не найден",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/playground/ping": {
            "get": {
                "description": "Проверка соединения через классический ping pong",
                "tags": [
                    "Playground"
                ],
                "responses": {
                    "200": {
                        "description": "Pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/review": {
            "put": {
                "description": "Обновить рецензию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Обновить рецензию",
                "parameters": [
                    {
                        "description": "Данные для обновления рецензии",
                        "name": "reviewUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создать рецензию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Создать рецензию",
                "parameters": [
                    {
                        "description": "Данные для создания рецензии",
                        "name": "reviewCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/content/{id}/{page}": {
            "get": {
                "description": "Получить рецензии контента",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получить рецензии контента",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID контента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/recent": {
            "get": {
                "description": "Получить последние рецензии",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получить последние рецензии",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewResponseList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/user/{id}/recent": {
            "get": {
                "description": "Получить последние рецензии пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получить последние рецензии пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/user/{id}/{page}": {
            "get": {
                "description": "Получить рецензии пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получить рецензии пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserReviewResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/{id}": {
            "get": {
                "description": "Получить рецензию по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Получить рецензию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID рецензии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удалить рецензию",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Удалить рецензию",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID рецензии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/{id}/dislike": {
            "put": {
                "description": "Поставить дизлайк рецензии",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Поставить дизлайк рецензии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID рецензии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/review/{id}/like": {
            "put": {
                "description": "Поставить лайк рецензии",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Поставить лайк рецензии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID рецензии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Убрать лайк с рецензии",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Убрать лайк с рецензии",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID рецензии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/static/{id}": {
            "get": {
                "description": "Получение ссылки на статический файл по id. Возвращает ссылку подобного вида:",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Static"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID статики",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "невалидный id статики",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "файл не найден",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/avatar": {
            "put": {
                "description": "Позволяет загрузить аватарку пользователя. Необходимо быть авторизованным",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "файл с аватаркой",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Невалидное изображение",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Авторизация пользователя. При успешной авторизации отправляет куки с сессией. Если пользователь уже",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "Возвращает id авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "put": {
                "description": "Обновляет пароль пользователя. Необходимо быть авторизованным, при этом все сессии пользователя",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления пароля",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Неверный пароль или невалидный payload",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "Возвращает профиль пользователя по id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Неверный id",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Позволяет обновить следующие данные пользователя: почта, имя (никнейм). Необходимо быть авторизованным.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "session=xxx",
                        "description": "session",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления профиля",
                        "name": "updateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Невалидные данные для обновления профиля",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Регистрация пользователя. Сразу же возвращает сессию в cookies",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "registerData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Compilation": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string",
                    "example": "action"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                }
            }
        },
        "dto.Genres": {
            "type": "object",
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "action",
                        "drama",
                        "comedian"
                    ]
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "format": "string",
                    "example": "email@email.com"
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "example": "SecretPassword1!"
                }
            }
        },
        "dto.PreviewContentCard": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Том Хэнкс",
                        "Сергей Бодров"
                    ]
                },
                "country": {
                    "type": "string",
                    "example": "Россия"
                },
                "director": {
                    "type": "string",
                    "example": "Тарантино"
                },
                "duration": {
                    "type": "integer",
                    "example": 134
                },
                "genre": {
                    "type": "string",
                    "example": "Боевик"
                },
                "originalTitle": {
                    "type": "string",
                    "example": "Batman"
                },
                "poster": {
                    "type": "string",
                    "example": "/static/poster.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 9.1
                },
                "releaseYear": {
                    "type": "integer",
                    "example": 2020
                },
                "title": {
                    "type": "string",
                    "example": "Бэтмен"
                }
            }
        },
        "dto.Register": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string",
                    "example": "email@email.com"
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "example": "SecretPassword1!"
                }
            }
        },
        "dto.ReviewCreateRequest": {
            "type": "object",
            "properties": {
                "contentID": {
                    "type": "integer",
                    "format": "int",
                    "example": 1
                },
                "rating": {
                    "type": "integer",
                    "format": "int",
                    "example": 5
                },
                "text": {
                    "type": "string",
                    "format": "string",
                    "example": "i like it"
                },
                "title": {
                    "type": "string",
                    "format": "string",
                    "example": "Title"
                }
            }
        },
        "dto.ReviewResponse": {
            "type": "object",
            "properties": {
                "authorAvatar": {
                    "type": "string",
                    "format": "string",
                    "example": "avatars/avatar.jpg"
                },
                "authorID": {
                    "type": "integer",
                    "format": "int",
                    "example": 1
                },
                "authorName": {
                    "type": "string",
                    "format": "string",
                    "example": "Author"
                },
                "contentID": {
                    "type": "integer",
                    "format": "int",
                    "example": 1
                },
                "contentName": {
                    "type": "string",
                    "format": "string",
                    "example": "Content"
                },
                "createdAt": {
                    "type": "string",
                    "format": "int",
                    "example": "2022-01-02T15:04:05Z"
                },
                "dislikes": {
                    "type": "integer",
                    "format": "int",
                    "example": 5
                },
                "id": {
                    "type": "integer",
                    "format": "int",
                    "example": 1
                },
                "likes": {
                    "type": "integer",
                    "format": "int",
                    "example": 5
                },
                "rating": {
                    "type": "integer",
                    "format": "int",
                    "example": 5
                },
                "text": {
                    "type": "string",
                    "format": "string",
                    "example": "i like it"
                },
                "title": {
                    "type": "string",
                    "format": "string",
                    "example": "Title"
                }
            }
        },
        "dto.ReviewResponseList": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ReviewResponse"
                    }
                }
            }
        },
        "dto.ReviewUpdateRequest": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer",
                    "format": "int",
                    "example": 5
                },
                "reviewID": {
                    "type": "integer",
                    "format": "int",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "format": "string",
                    "example": "i like it"
                },
                "title": {
                    "type": "string",
                    "format": "string",
                    "example": "Title"
                }
            }
        },
        "dto.UpdatePassword": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string",
                    "format": "string",
                    "example": "NewPassword1!"
                },
                "oldPassword": {
                    "type": "string",
                    "format": "string",
                    "example": "OldPassword1!"
                }
            }
        },
        "dto.UserReviewResponseList": {
            "type": "object",
            "properties": {
                "me": {
                    "type": "boolean",
                    "format": "bool",
                    "example": true
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ReviewResponse"
                    }
                }
            }
        },
        "dto.UserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "API Киноскопа",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
