// Code generated by MockGen. DO NOT EDIT.
// Source: collections.go
//
// Generated by this command:
//
//	mockgen -source=collections.go -destination=mocks/mock_collections.go
//

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	DTO "github.com/go-park-mail-ru/2024_1_Cyberkotletki/internal/entity/DTO"
	gomock "go.uber.org/mock/gomock"
)

// MockCollections is a mock of Collections interface.
type MockCollections struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionsMockRecorder
}

// MockCollectionsMockRecorder is the mock recorder for MockCollections.
type MockCollectionsMockRecorder struct {
	mock *MockCollections
}

// NewMockCollections creates a new mock instance.
func NewMockCollections(ctrl *gomock.Controller) *MockCollections {
	mock := &MockCollections{ctrl: ctrl}
	mock.recorder = &MockCollectionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCollections) EXPECT() *MockCollectionsMockRecorder {
	return m.recorder
}

// GetCompilation mocks base method.
func (m *MockCollections) GetCompilation(genre string) (*DTO.Compilation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompilation", genre)
	ret0, _ := ret[0].(*DTO.Compilation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCompilation indicates an expected call of GetCompilation.
func (mr *MockCollectionsMockRecorder) GetCompilation(genre any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompilation", reflect.TypeOf((*MockCollections)(nil).GetCompilation), genre)
}

// GetGenres mocks base method.
func (m *MockCollections) GetGenres() (*DTO.Genres, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenres")
	ret0, _ := ret[0].(*DTO.Genres)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGenres indicates an expected call of GetGenres.
func (mr *MockCollectionsMockRecorder) GetGenres() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenres", reflect.TypeOf((*MockCollections)(nil).GetGenres))
}
