// Code generated by MockGen. DO NOT EDIT.
// Source: content.go
//
// Generated by this command:
//
//	mockgen -source=content.go -destination=mocks/mock_content.go
//

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	DTO "github.com/go-park-mail-ru/2024_1_Cyberkotletki/internal/entity/DTO"
	gomock "go.uber.org/mock/gomock"
)

// MockContent is a mock of Content interface.
type MockContent struct {
	ctrl     *gomock.Controller
	recorder *MockContentMockRecorder
}

// MockContentMockRecorder is the mock recorder for MockContent.
type MockContentMockRecorder struct {
	mock *MockContent
}

// NewMockContent creates a new mock instance.
func NewMockContent(ctrl *gomock.Controller) *MockContent {
	mock := &MockContent{ctrl: ctrl}
	mock.recorder = &MockContentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContent) EXPECT() *MockContentMockRecorder {
	return m.recorder
}

// GetContentPreviewCard mocks base method.
func (m *MockContent) GetContentPreviewCard(arg0 int) (*DTO.PreviewContentCard, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContentPreviewCard", arg0)
	ret0, _ := ret[0].(*DTO.PreviewContentCard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContentPreviewCard indicates an expected call of GetContentPreviewCard.
func (mr *MockContentMockRecorder) GetContentPreviewCard(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContentPreviewCard", reflect.TypeOf((*MockContent)(nil).GetContentPreviewCard), arg0)
}
