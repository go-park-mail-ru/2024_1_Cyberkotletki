// Code generated by MockGen. DO NOT EDIT.
// Source: static.go
//
// Generated by this command:
//
//	mockgen -source=static.go -destination=mocks/mock_static.go
//

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	bytes "bytes"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStatic is a mock of Static interface.
type MockStatic struct {
	ctrl     *gomock.Controller
	recorder *MockStaticMockRecorder
}

// MockStaticMockRecorder is the mock recorder for MockStatic.
type MockStaticMockRecorder struct {
	mock *MockStatic
}

// NewMockStatic creates a new mock instance.
func NewMockStatic(ctrl *gomock.Controller) *MockStatic {
	mock := &MockStatic{ctrl: ctrl}
	mock.recorder = &MockStaticMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatic) EXPECT() *MockStaticMockRecorder {
	return m.recorder
}

// GetBasicPath mocks base method.
func (m *MockStatic) GetBasicPath() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBasicPath")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBasicPath indicates an expected call of GetBasicPath.
func (mr *MockStaticMockRecorder) GetBasicPath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBasicPath", reflect.TypeOf((*MockStatic)(nil).GetBasicPath))
}

// GetMaxSize mocks base method.
func (m *MockStatic) GetMaxSize() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxSize")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMaxSize indicates an expected call of GetMaxSize.
func (mr *MockStaticMockRecorder) GetMaxSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxSize", reflect.TypeOf((*MockStatic)(nil).GetMaxSize))
}

// GetStatic mocks base method.
func (m *MockStatic) GetStatic(staticID int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatic", staticID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatic indicates an expected call of GetStatic.
func (mr *MockStaticMockRecorder) GetStatic(staticID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatic", reflect.TypeOf((*MockStatic)(nil).GetStatic), staticID)
}

// UploadStatic mocks base method.
func (m *MockStatic) UploadStatic(path, filename string, buf bytes.Buffer) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadStatic", path, filename, buf)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadStatic indicates an expected call of UploadStatic.
func (mr *MockStaticMockRecorder) UploadStatic(path, filename, buf any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadStatic", reflect.TypeOf((*MockStatic)(nil).UploadStatic), path, filename, buf)
}
