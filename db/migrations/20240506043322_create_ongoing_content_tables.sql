-- +goose Up

-- Создание таблицы ongoing_content
CREATE TABLE IF NOT EXISTS ongoing_content
(
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type        TEXT
        CONSTRAINT ongoing_content_type_length CHECK (LENGTH(type) <= 50) NOT NULL,
    title      TEXT
        CONSTRAINT ongoing_content_title_length CHECK (LENGTH(title) <= 150) NOT NULL,
    poster_upload_id INT,
    release_date TIMESTAMPTZ NOT NULL
);

CREATE TABLE IF NOT EXISTS genre_ongoing_content
(
    genre_id   INT NOT NULL,
    ongoing_content_id INT NOT NULL,
    FOREIGN KEY (genre_id) REFERENCES genre (id) ON DELETE CASCADE,
    FOREIGN KEY (ongoing_content_id) REFERENCES ongoing_content (id) ON DELETE CASCADE,
    CONSTRAINT genre_ongoing_content_unique UNIQUE (genre_id, ongoing_content_id)
);

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('1.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Пророк. История Александра Пушкина', new_static.id, '2025-02-14 00:00:00'
FROM new_static;


WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('2.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Волшебник Изумрудного города', new_static.id, '2025-01-01 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('3.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Ворон', new_static.id, '2024-08-21 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('4.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Ждун в кино', new_static.id, '2025-01-01 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('5.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Сказосные выходные', new_static.id, '2025-08-07 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('6.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Финик 2', new_static.id, '2025-10-23 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('7.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Красный шелк', new_static.id, '2025-02-20 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('8.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Грязные деньги', new_static.id, '2025-01-16 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('9.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Сивка-бурка', new_static.id, '2026-01-01 00:00:00'
FROM new_static;

WITH new_static AS (
INSERT INTO static (name, path)
VALUES ('10.webp', 'ongoing')
    RETURNING id
    )
INSERT INTO ongoing_content (type, title, poster_upload_id, release_date)
SELECT 'movie', 'Сказка о царе Салтане', new_static.id, '2026-02-19 00:00:00'
FROM new_static;

-- Вставка данных в таблицу genre_ongoing_content
INSERT INTO genre_ongoing_content (genre_id, ongoing_content_id)
VALUES (2, 4),
       (5, 4),
       (10, 3),
       (10, 2),
       (13, 1),
       (9, 5),
       (12, 6),
       (11, 7),
       (6, 8),
       (8, 9),
       (8, 10),
       (23, 10);